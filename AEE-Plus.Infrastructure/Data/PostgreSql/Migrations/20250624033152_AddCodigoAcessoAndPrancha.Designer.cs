// <auto-generated />
using System;
using AEE_Plus.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AEE_Plus.Infrastructure.Data.PostgreSql.Migrations
{
    [DbContext(typeof(AEEPlusDbContext))]
    [Migration("20250624033152_AddCodigoAcessoAndPrancha")]
    partial class AddCodigoAcessoAndPrancha
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdTurma")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("IdTurma");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.CodigoAcesso.CodigoAcessoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Expiracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<bool>("Utilizado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("CodigoAcessoEntity");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.CurriculoHabilidades.CurriculoHabilidadesEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdAluno")
                        .HasColumnType("bigint");

                    b.Property<int>("NumeroArea")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroDiagnostico")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroPergunta")
                        .HasColumnType("integer");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.ToTable("CurriculosHabilidades");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Jogo.JogoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("PontuacaoAtiva")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.PAEE.PaeeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConteudoResposta")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdAluno")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno")
                        .IsUnique();

                    b.ToTable("PAEE");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.PranchaComunicacao.PranchaComunicacaoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cards")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("DataUltimaEdicao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("PranchasComunicacao");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.ProtocoloConduta.ProtocoloCondutaEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConteudoResposta")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("IdAluno")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno")
                        .IsUnique();

                    b.ToTable("ProtocolosConduta");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Turma.TurmaEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Escola")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<long>("IdProfessor")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdProfessor");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Usuario.UsuarioEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("PrimeiroAcesso")
                        .HasColumnType("boolean");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Turma.TurmaEntity", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.CodigoAcesso.CodigoAcessoEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Usuario.UsuarioEntity", "Usuario")
                        .WithOne()
                        .HasForeignKey("AEE_Plus.Domain.Entities.CodigoAcesso.CodigoAcessoEntity", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.CurriculoHabilidades.CurriculoHabilidadesEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", "Aluno")
                        .WithMany("CurriculoHabilidades")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.PAEE.PaeeEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", "Aluno")
                        .WithOne()
                        .HasForeignKey("AEE_Plus.Domain.Entities.PAEE.PaeeEntity", "IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.PranchaComunicacao.PranchaComunicacaoEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Usuario.UsuarioEntity", "Usuario")
                        .WithOne()
                        .HasForeignKey("AEE_Plus.Domain.Entities.PranchaComunicacao.PranchaComunicacaoEntity", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.ProtocoloConduta.ProtocoloCondutaEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", "Aluno")
                        .WithOne()
                        .HasForeignKey("AEE_Plus.Domain.Entities.ProtocoloConduta.ProtocoloCondutaEntity", "IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Turma.TurmaEntity", b =>
                {
                    b.HasOne("AEE_Plus.Domain.Entities.Usuario.UsuarioEntity", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Aluno.AlunoEntity", b =>
                {
                    b.Navigation("CurriculoHabilidades");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Turma.TurmaEntity", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("AEE_Plus.Domain.Entities.Usuario.UsuarioEntity", b =>
                {
                    b.Navigation("Turmas");
                });
#pragma warning restore 612, 618
        }
    }
}
